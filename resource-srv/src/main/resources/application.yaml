spring:
  application:
    name: 'resource-srv'
  rabbitmq:
    port: '5672'
    host: ${RABBITMQ_NAME:localhost}
    username: guest
    password: guest
    queue:
      create: createq
      delete: deleteq
  cloud:
    bus:
      enabled: true
      refresh:
        enabled: true
    stream:
      overrideCloudConnectors: true
      bindings:
        output-1:
          destination: createq
          group: createq
          contentType: application/json
          binder: rabbit
        sink-in-0:
          destination: changeq
          contentType: application/json
          group: changeq
          queue-name-group-only: true
          bind-queue: true
          exchange-durable: true
          exchange-type: topic
          binder: rabbit
      rabbit:
        bindings:
          Output-1:
            consumer:
              max-attempts: 3
              autoBindDlq: true
              dlqTtl: 5000
          isink-in-0:
            consumer:
              max-attempts: 3
              autoBindDlq: true
              dlqTtl: 5000
    function:
      definition: sink
server:
  port: '8090'
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
  instance:
    hostName: ${spring.application.name}
    preferIpAddress: false

cloud:
  aws:
    s3-bucket-name: mp3-bucket
    s3-mp3-folder: mp3
s3:
  access:
    name: localstack
    secret: localstack
  endpoint:
    url: ${S3_URL:http://localhost:4566}
  region:
    name: us-east-1

proxy:
  url: ${PROXY_URL:http://localhost:8080}

api:
  storage:
    path: ${STORAGE_PATH:/api/v1/storages/}


resilience4j:
  circuitbreaker:
    instances:
      CircuitBreakerService:
        sliding-window-size: '10'
        minimum-number-of-calls: '5'
        permitted-number-of-calls-in-half-open-state: '3'
        failure-rate-threshold: '50'
        wait-duration-in-open-state: 5s
        sliding-window-type: count_based
        automatic-transition-from-open-to-half-open-enabled: 'true'

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
